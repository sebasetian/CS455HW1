Name: LIN,SHIH YAO
USC NetId: 7208835144
CSCI 455 PA1
Spring 2018

----------------------------------------------
CERTIFY IT'S YOUR WORK

"I certify that the work submitted for this assignment does not
violate USC's student conduct code.  In particular, the work is my
own, not a collaboration, and does not involve code created by other
people, except for the the resources explicitly mentioned in the CS 455
Course Syllabus.  And I did not share my solution or parts of it with
other students in the course."

Initial below to "sign" the above statement:
SY

----------------------------------------------
ACKNOWLEDGE ANY OUTSIDE SOURCES

1.Use the knowledge from Horstmann, Section 2.9, 2.10, 3.8, How-to 3.2 Programs that draw stuff
in CoinSimComponent.java and CoinSimViewer.java to draw bars.
2.Use the knowledge from Horstmann, Section 4.3.1, Reading input in CoinSimViewer.java to handle input.
3.Use the knowledge from Horstmann, Section 6.9.1, Random numbers and Simulations in CoinSimSimulator.java to
create Random numbers.



----------------------------------------------
KNOWN BUGS or LIMITATIONS:

1.The percentage in CoinSimViewer.java can only round any number off to 1 decimal place.


----------------------------------------------
ANY OTHER NOTES FOR THE GRADER:



----------------------------------------------
ANSWERS TO ASSIGNMENT README QUESTIONS (if applicable):

1.What is the probability of each of the three outcomes in a trial: two heads, one head and one tail, and two tails?
 Why is one of them different than the other two?

 Ans:
     two heads : 25 %
     head-tail : 50 %
     two tails : 25 %
     because head-tail in two toss can be one head, one tail or one tail, one head(head first or tail first),
     both of which has 25 % probability. Therefore the result should be 25 % + 25 % = 50 % as head-tail adds up these
     two kinds of outcomes.

2.Roughly how many trials do you need to do before you mostly get results within 1% of these probabilities?
 Do several simulations using your program to determine an answer to this.

 Ans:
    1000 trails is stable for results within 1% errors after 10 simulations.
    900 trails is also Okay but not so stable.
    So, roughly 900~1000 would be the answer.

3.Roughly how many trials can you do before it crashes with an overflow error?
State the largest value you tried where it still worked correctly, and one where it overflowed.
You can get an idea of what general values to try by looking at the limits on Java integers.
Play around with your program to verify that it actually works for very large values that are within the limits.
Warning: For very large values you may have to wait a fair amount of time before you get the results
(probably slower on aludra than on you own machine).

 Ans:
     2147483647 trails is the largest value that worked, but 2147483648 overflowed.
     That is because the maximum value of signed int in JAVA is 2147483647.

